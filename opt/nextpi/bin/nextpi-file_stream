#!/bin/bash

# Take a stream of data on stdin, via one of several encoding schemes
# and eject on stdout - default is UUE (example below), there is also an
# interactive protocol behind the switch -n, which drops back to
# nextpi_file_recieve but outputting to stdout instead
#
#   encode with:
#		uuencode -m < AFILE.BIN ReferenceName.ext > AFILE.UUE
#
#   If the archive is decoded with nextpi-file_receive it will use the
#	"ReferenceName.ext" when created on disc. 
#
#   nextpi-file_stream does not use any referenced filenames, as it emits
#	bytes on stdout instead
# 
#  Resultant AFILE.UUE is the file you would include in your nextbundle
#   and is the file you should send over the UART if not wanting to use an
#   interactive protocol, as documented for nextpi-file_receive
#
# Non-default options:
#
#       -n      Use NBN2 packet format (16k blocks, 8bit carrysum, ?! ctrlcode -
#                       see nextpi-file_receive documentation for more details)
#
#       -x      Use XOR summing instead of 8bit carrysum.  (see python for no details)

while getopts "nx" opt; do
    case "$opt" in
    n)
        nextpi-file_receive -nbn -stream -vl
        exit 0
        ;;
    x)
        nextpi-file_receive -xor -stream -vl
        exit 0
        ;;
    esac
done

## Fallback backwards compatibility method with NextPi 0.99D
stty -echo
uudecode -o-
stty echo
